platform: linux/arm

pipeline:
  restore-composer-cache:
    image: foo/drone-volume-cache
    restore: true
    mount:
      - /drone/.composer
    volumes:
      - /tmp/drone-volume-cache/composer:/cache

  restore-yarn-cache:
    image: foo/drone-volume-cache
    restore: true
    mount:
      - /drone/.yarn
    volumes:
      - /tmp/drone-volume-cache/yarn:/cache

  clone:
    image: armswarmdrone/git

  build:
    image: sandlayth/arm-nginx-php-fpm
    commands:
      ###
      # The following 2 commands ensure that composer caches its stuff in a common
      # area so it can be cached by the `drone-volume-cache` plugin.
      - |
        if [ ! -d "/drone/.composer/" ]; then
          mv ~/.composer /drone/;
        fi
      - export COMPOSER_HOME=/drone/.composer
      ###
      - find ./app -name "*.php" -print0 | xargs -0 -n1 -P8 php -l > /dev/null
      - echo "[âœ“] No PHP syntax errors detected in the [ app/ ] folder" > /dev/null
      - composer -q install
      - ./vendor/bin/php-linter ./app/
      - php vendor/bin/security-checker security:check ./ -n
      - cp .env.drone .env
      - php artisan migrate --env=testing --no-interaction -vvv
      - php artisan db:seed --env=testing --no-interaction -vvv
      - ./vendor/bin/phpunit  -vvv
      - php artisan serve > /dev/null 2>&1 &
      - ./vendor/bin/wait-for-webserver
      - curl localhost:8000
      - php -v

  build-node:
    image: hypriot/rpi-node
    commands:
      ###
      # The following 2 commands ensure that yarn caches its stuff in a common
      # area so it can be cached by the `drone-volume-cache` plugin.
      # - if [ ! -d "/drone/.yarn/" ]; then mkdir /drone/.yarn; fi
      # - yarn config set cache-folder /drone/.yarn
      ###
      - npm install
      # - npm install -g node-gyp
      # - yarn cache dir
      # - sleep 50000
      # - yarn install --no-progress

  rebuild-composer-cache:
    image: foo/drone-volume-cache
    rebuild: true
    mount:
      - /drone/.composer
    volumes:
      - /tmp/drone-volume-cache/composer:/cache

  rebuild-yarn-cache:
    image: foo/drone-volume-cache
    rebuild: true
    mount:
      - /drone/.yarn
    volumes:
      - /tmp/drone-volume-cache/yarn:/cache

  ###
  # DEPLOYMENT STEP - fill in the details when set up
  ###
  # deploy:
  #   image: tbd:latest

services:
  database:
    image: hypriot/rpi-mysql
    environment:
      - MYSQL_DATABASE=testing
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes


